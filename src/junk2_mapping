'''
This script functions as a dispatcher to use the desired mapper.
It sets the necessary variables and launch the mapper.

Variables to set when calling from a SConscript:
 * mapper
 * genome_index
 * genome_fasta
 * sample_id
 * mapper_extra_params
 * mapper_cpus
 * clean_reads

'''
import os


Import('*')

try:
    mapper
    genome_index
    genome_fasta
    sample_id
    mapper_extra_params
    mapper_cpus
    reads_to_map = clean_reads
except NameError:
    print "ERROR: variable not set in mapper dispatcher. Exiting"
    Exit(1)

SRC_DIR = os.path.join(env['ENV']['JUNK2_HOME'], 'src')

mapping_dir = 'mappings'
make_mapping_dir = env.Command(Dir(mapping_dir), [], Mkdir('$TARGET'))
mappings = []
if mapper.lower()=='segemehl':
    segemehl_cpus = mapper_cpus
    sample_id = sample_id
    segemehl_genome_fasta = genome_fasta
    segemehl_index = genome_index
    segemehl_extra_params = mapper_extra_params

    mappings.append(SConscript(os.path.join(mapping_dir, 'junk2_segemehl_mapping'), 
                    src_dir = SRC_DIR, variant_dir = mapping_dir, 
                    duplicate = 0, 
                    exports = 'env reads_to_map segemehl_cpus sample_id segemehl_genome_fasta segemehl_index segemehl_extra_params')
                   )

Clean('.', make_mapping_dir[0].path)
Return('mappings')
