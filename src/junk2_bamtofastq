'''

This SConscript converts BAM (un)alignments to FASTQ format, 
a.i. to convert unmapped reads to their original FASTQ format.

Software dependencies:
 * Bedtools v2.23
 * Samtools v1.2

When called from a SConscript it imports the following variables:
 * env
 * cpus
 * bamfile
 * prefix_id

'''

import os

Import('*')

try:
    # these are the variables passed with 'exports' from a calling SConscript
    env = env
    CPUS = cpus
    BAM = bamfile
    ID = prefix_id

except NameError:
    vars = Variables('vars.py')
    vars.Add('CPUS' , 'Max parallel jobs to execute'    , '4')
    vars.Add('BAM'  , 'The alignment file in BAM format', 'unmapped.bam')
    vars.Add('ID'   , 'An id to name output file(s)'    , 'unmapped')
    vars.Add('PAIRED','Whether the reads are paired-end', 'True')
    
    cmdline_env = Environment(ENV=os.environ,
                              variables=vars)
    
    Help(vars.GenerateHelpText(cmdline_env))
    unknown = vars.UnknownVariables()
    if unknown:
        print "Unknown variables:", unknown.keys()
        Exit(1)

    # These are the variables given from the command line when the SConscript is called
    # standalone
    env = cmdline_env
    CPUS = env['CPUS']
    BAM = env['BAM']
    ID = env['ID']
    PAIRED = env['PAIRED']

convert_cmd = '''samtools sort -n $(-l 0 -@ ''' + CPUS + ''' -O 'bam' -T ''' + ID + '''$) $SOURCE | '''\
              '''bedtools bamtofastq -i - -fq ${TARGETS[0].base} '''
convert_targets = [ID + '_1.fq.gz']

if PAIRED.lower() in ['yes', 'y', '1', 'true', 't']:
    convert_cmd = convert_cmd + ''' -fq2 ${TARGETS[1].base}'''
    convert_targets.append(ID + '_2.fq.gz')
convert_cmd = convert_cmd + ''' && gzip ${TARGETS[0].base} ''' 
if PAIRED.lower() in ['yes', 'y', '1', 'true', 't']:
    convert_cmd = convert_cmd + '''&& gzip ${TARGETS[1].base}'''

convert = env.Command(convert_targets, BAM, convert_cmd, chdir=1)

Return('convert')
