'''
This SConscript build genome indexes for various read aligners.
Currently supported are:
    * HISAT2
'''

import os

vars = Variables('vars.py')
vars.Add('INDEXES', 'A comma separated list of indexes to build', 
         'HISAT2,BWA,BOWTIE2,SEGEMEHL,STAR')
vars.Add('CPUS', 'Number of cpus to use for multi thread run', '1')
vars.Add('GENOME', 'The list of input FASTA files composing the genome sequence. '\
        'Comma separated', '')
vars.Add('EXTRA_PARAMS', 'Extra parameters for htseq2-build', '')


env = Environment(ENV=os.environ, SHELL = '/bin/bash',
                  variables=vars)
Help(vars.GenerateHelpText(env))
unknown = vars.UnknownVariables()
if unknown:
    print "Unknown variables", unknown.keys()
    Exit(1)


SCONSCRIPT_HOME = os.path.join(env['ENV']['JUNK2_HOME'], 'src')

indexes_dir = 'indexes'

if 'HISAT2' in env['INDEXES'].split(','):
    
    env_index_hisat2 = env
    env_index_hisat2['CPUS'] = env['CPUS']
    env_index_hisat2['GENOME'] = ','.join([File(f).abspath for f in env['GENOME'].split(',')])
    env_index_hisat2['EXTRA_PARAMS'] = env['EXTRA_PARAMS']

    index_dir = os.path.join(indexes_dir, 'hisat2')
    index = SConscript(os.path.join(index_dir, 'junk2_index_hisat2'), 
                            src_dir = SCONSCRIPT_HOME, 
                            variant_dir = index_dir, duplicate = 0,
                            exports = '''env_index_hisat2 ''')
    Clean('.', index_dir)

if 'SEGEMEHL' in env['INDEXES'].split(','):
    
    env_index_segemehl = env
    env_index_segemehl['GENOME'] = ','.join([File(f).abspath for f in env['GENOME'].split(',')])
    env_index_segemehl['EXTRA_PARAMS'] = env['EXTRA_PARAMS']

    index_dir = os.path.join(indexes_dir, 'segemehl')
    index = SConscript(os.path.join(index_dir, 'junk2_index_segemehl'), 
                            src_dir = SCONSCRIPT_HOME, 
                            variant_dir = index_dir, duplicate = 0,
                            exports = '''env_index_segemehl ''')

    Clean('.', index_dir)

Clean('.', indexes_dir)
